---
author: gavin
comments: false
date: 2013-08-18 14:14:22
layout: post
slug: c%e7%b1%bb
title: C++类
wordpress_id: 237
categories:
- C++
---

## 类
C++允许程序员使用类（class）定义特定程序中的数据类型，这些数据类型的实例被称为对象，这些实例可以包含程序员定义的成员变量、常量、成员函数、以及重载的运算符。示例：
   
    class class_name {
        permission_label_1:
            member1;
        permission_label_2:
            member2;
        ...
    } object_name;

其中`permission_label_1`可以是以下三个关键字中的任意一个：

  * `private`：这个也是默认值，只有同一个类的其它成员或该类的友元类才可以访问这些成员。
  * `protected`：在`private`的基础上，该类的子类也可以访问这些成员。
  * `public`：开放访问。

最后面的`object_name`是可选的，但最后的`;`必不可少。  

一个完整的例子：
   
    #include <iostream>
    #include <string>
    using namespace std;  
    class person {
    public:
        string name;
        int age;
    };  
    int main(){
        person a, b;
        a.name = "Gavin";
        a.age = 24;
        b.name = "Fleischer";
        b.age = 42;  
        cout << a.name << ": " << a.age << endl;
        cout << b.name << ": " << b.age << endl;  
        return 0;
    }

执行以上程序，将会打印出：
   
    Gavin: 24
    Fleischer: 42

### 成员函数
成员函数是C++类与结构体的重要属性（C++中结构体可以有成员函数，与class相同。C++中结构体与类仅有的不同之处是成员和基类的访问权限）。每个数据类型可以包含其自身的内置函数（这些函数被称为方法）。这些函数可以访问其自身的所有成员。在这些非静态的函数体内，关键词this能够指代调用该函数的对象。示例：
   
    class person{
        std::string name;
        int age;
    public:
        person() : age(5) {}
        void print() const;
    };  
    void person::print() const {
        cout << name << ";" << this->age << endl;
    }
